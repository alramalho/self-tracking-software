name: Daily Tests

on:
  schedule:
    - cron: '0 8 * * *'  # Runs at 8am UTC every day
  workflow_dispatch:  # Allows manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest
          
      - name: Run backend tests
        id: backend_tests
        continue-on-error: true
        env:
          ENVIRONMENT: "production"
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          cd backend
          OUTPUT=$(./scripts/run_tests.sh 2>&1) || {
            echo "$OUTPUT" > test_output.txt
            python scripts/notify_test_failure.py "Backend Tests" "$(cat test_output.txt)"
            exit 1
          }
          
      - name: Setup Node.js
        if: steps.backend_tests.outcome == 'success'
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install E2E test dependencies
        if: steps.backend_tests.outcome == 'success'
        working-directory: e2e-tests
        run: |
          yarn install
          npx playwright install --with-deps
          
      - name: Run E2E tests
        if: steps.backend_tests.outcome == 'success'
        id: e2e_tests
        continue-on-error: true
        working-directory: e2e-tests
        env:
          BASE_URL: "https://app.tracking.so"
          APP_TEST_USER_EMAIL: "alexandre.ramalho.1998+e2etracking@gmail.com"
          APP_TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          OUTPUT=$(yarn test 2>&1) || {
            echo "$OUTPUT" > test_output.txt
            cd ../backend
            python -m scripts.notify_test_failure "E2E Tests" "$(cat ../e2e-tests/test_output.txt)"
            exit 1
          }

      - name: Check test results
        if: always()
        run: |
          if [ "${{ steps.backend_tests.outcome }}" != "success" ] || [ "${{ steps.e2e_tests.outcome }}" != "success" ]; then
            exit 1
          fi 