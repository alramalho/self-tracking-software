/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SignoutRouteImport } from './routes/signout'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as SearchRouteImport } from './routes/search'
import { Route as PlansRouteImport } from './routes/plans'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as DownloadRouteImport } from './routes/download'
import { Route as CreateNewPlanRouteImport } from './routes/create-new-plan'
import { Route as AddRouteImport } from './routes/add'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileUsernameRouteImport } from './routes/profile.$username'
import { Route as FriendsUsernameRouteImport } from './routes/friends.$username'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SignoutRoute = SignoutRouteImport.update({
  id: '/signout',
  path: '/signout',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansRoute = PlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DownloadRoute = DownloadRouteImport.update({
  id: '/download',
  path: '/download',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateNewPlanRoute = CreateNewPlanRouteImport.update({
  id: '/create-new-plan',
  path: '/create-new-plan',
  getParentRoute: () => rootRouteImport,
} as any)
const AddRoute = AddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileUsernameRoute = ProfileUsernameRouteImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const FriendsUsernameRoute = FriendsUsernameRouteImport.update({
  id: '/friends/$username',
  path: '/friends/$username',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/create-new-plan': typeof CreateNewPlanRoute
  '/download': typeof DownloadRoute
  '/onboarding': typeof OnboardingRoute
  '/plans': typeof PlansRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/friends/$username': typeof FriendsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/create-new-plan': typeof CreateNewPlanRoute
  '/download': typeof DownloadRoute
  '/onboarding': typeof OnboardingRoute
  '/plans': typeof PlansRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/friends/$username': typeof FriendsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/create-new-plan': typeof CreateNewPlanRoute
  '/download': typeof DownloadRoute
  '/onboarding': typeof OnboardingRoute
  '/plans': typeof PlansRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/friends/$username': typeof FriendsUsernameRoute
  '/profile/$username': typeof ProfileUsernameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add'
    | '/create-new-plan'
    | '/download'
    | '/onboarding'
    | '/plans'
    | '/search'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/friends/$username'
    | '/profile/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add'
    | '/create-new-plan'
    | '/download'
    | '/onboarding'
    | '/plans'
    | '/search'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/friends/$username'
    | '/profile/$username'
  id:
    | '__root__'
    | '/'
    | '/add'
    | '/create-new-plan'
    | '/download'
    | '/onboarding'
    | '/plans'
    | '/search'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/friends/$username'
    | '/profile/$username'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRoute: typeof AddRoute
  CreateNewPlanRoute: typeof CreateNewPlanRoute
  DownloadRoute: typeof DownloadRoute
  OnboardingRoute: typeof OnboardingRoute
  PlansRoute: typeof PlansRoute
  SearchRoute: typeof SearchRoute
  SigninRoute: typeof SigninRoute
  SignoutRoute: typeof SignoutRoute
  SignupRoute: typeof SignupRoute
  FriendsUsernameRoute: typeof FriendsUsernameRoute
  ProfileUsernameRoute: typeof ProfileUsernameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans': {
      id: '/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof PlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/download': {
      id: '/download'
      path: '/download'
      fullPath: '/download'
      preLoaderRoute: typeof DownloadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-new-plan': {
      id: '/create-new-plan'
      path: '/create-new-plan'
      fullPath: '/create-new-plan'
      preLoaderRoute: typeof CreateNewPlanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/friends/$username': {
      id: '/friends/$username'
      path: '/friends/$username'
      fullPath: '/friends/$username'
      preLoaderRoute: typeof FriendsUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRoute: AddRoute,
  CreateNewPlanRoute: CreateNewPlanRoute,
  DownloadRoute: DownloadRoute,
  OnboardingRoute: OnboardingRoute,
  PlansRoute: PlansRoute,
  SearchRoute: SearchRoute,
  SigninRoute: SigninRoute,
  SignoutRoute: SignoutRoute,
  SignupRoute: SignupRoute,
  FriendsUsernameRoute: FriendsUsernameRoute,
  ProfileUsernameRoute: ProfileUsernameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
